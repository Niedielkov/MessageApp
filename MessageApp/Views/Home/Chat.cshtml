@model Chat

@using System.Security.Claims;

@{
    var userId = User.FindFirst(ClaimTypes.NameIdentifier).Value;
}

<div class="message-box">
    <div class="box-top">
        <div class="recents">
            <div class="recent-img">
                <img src="~/img/polygon.jpg" />
            </div>
            <div class="recent-data">
                <h3>@Model.ChatUsers.FirstOrDefault(u => u.UserId != userId).User.UserName</h3>
                <span>Online Now</span>
            </div>
        </div>
        <div class="call-actions">
            <div class="action-icons">
                <i class="fas fa-phone-alt"></i>
                <i class="fas fa-video"></i>
                <i class="fas fa-image"></i>
            </div>
        </div>
    </div>
    <div class="box">
        @foreach(var message in Model.Messages)
        {
            <div class="recents">
                <div class="recent-img">
                    <img src="~/img/polygon.jpg" />
                </div>
                <div class="recent-data">
                    <h3>@message.SenderName <span class="time">@message.TimeStamp</span></h3>
                    <span>@message.Text</span>
                </div>
            </div>
        }
    </div>
    <form class="input-box" onsubmit="sendMessage(event)" asp-controller="Home" asp-action="CreateMessage">
        <img src="~/img/polygon.jpg" />
        <input type="hidden" name="chatId" value="@Model.Id" />
        <input type="text" name="text" id="message-input" placeholder="Your Message..." />
        <button type="submit">
            <i class="fas fa-paper-plane"></i>
        </button>
    </form>
</div>
<div class="contact">
    <div class="contact-detail">
        <img src="~/img/polygon.jpg" />
        <h3>@Model.ChatUsers.FirstOrDefault(u => u.UserId != userId).User.UserName</h3>
        <a href="#">user@gmail.com</a>
        <div class="contact-icons">
            <i class="fas fa-phone-alt"></i>
            <i class="fas fa-video"></i>
            <i class="fas fa-image"></i>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/signalr.min.js"></script>
    <script src="~/js/messagebuilder.js"></script>
    <script src="https://unpkg.com/axios@1.1.2/dist/axios.min.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        var _connectionId = '';

        connection.on("RecieveMessage", function (data) {
            var recentImage = recentImageBuilder()
                .createRecentImage()
                .withImage("/img/polygon.jpg")
                .build();

            var recentData = recentDataBuilder()
                .createRecentData()
                .withSenderName(data.senderName)
                .withTimeStamp(data.timeStamp)
                .withText(data.text)
                .build();

            var recents = document.createElement('div');
            recents.className = 'recents';
            recents.appendChild(recentImage);
            recents.appendChild(recentData);

            document.querySelector('.box').append(recents);
        })

        connection.start()
            .then(function () {
                connection.invoke('joinChat', '@Model.Id');
            })
            .catch(function (err) {
                console.log(err);
            })

        window.addEventListener('onunload', function () {
            connection.invoke('leaveChat', '@Model.Id');
        })

        var sendMessage = function(event) {
            event.preventDefault();

            var data = new FormData(event.target);
            document.getElementById('message-input').value = '';
            axios.post('/Home/CreateMessage', data)
                .then(res => {
                    console.log("Message Sent!")
                })
                .catch(err => {
                    console.log("Failed to send message!")
                })
        }
    </script>
}